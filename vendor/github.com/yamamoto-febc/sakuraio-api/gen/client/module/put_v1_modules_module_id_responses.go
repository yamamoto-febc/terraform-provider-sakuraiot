package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// PutV1ModulesModuleIDReader is a Reader for the PutV1ModulesModuleID structure.
type PutV1ModulesModuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutV1ModulesModuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutV1ModulesModuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutV1ModulesModuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutV1ModulesModuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutV1ModulesModuleIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPutV1ModulesModuleIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutV1ModulesModuleIDOK creates a PutV1ModulesModuleIDOK with default headers values
func NewPutV1ModulesModuleIDOK() *PutV1ModulesModuleIDOK {
	return &PutV1ModulesModuleIDOK{}
}

/*PutV1ModulesModuleIDOK handles this case with default header values.

Updated module
*/
type PutV1ModulesModuleIDOK struct {
	Payload *models.Module
}

func (o *PutV1ModulesModuleIDOK) Error() string {
	return fmt.Sprintf("[PUT /v1/modules/{moduleId}/][%d] putV1ModulesModuleIdOK  %+v", 200, o.Payload)
}

func (o *PutV1ModulesModuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Module)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutV1ModulesModuleIDUnauthorized creates a PutV1ModulesModuleIDUnauthorized with default headers values
func NewPutV1ModulesModuleIDUnauthorized() *PutV1ModulesModuleIDUnauthorized {
	return &PutV1ModulesModuleIDUnauthorized{}
}

/*PutV1ModulesModuleIDUnauthorized handles this case with default header values.

Unauthentication
*/
type PutV1ModulesModuleIDUnauthorized struct {
}

func (o *PutV1ModulesModuleIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/modules/{moduleId}/][%d] putV1ModulesModuleIdUnauthorized ", 401)
}

func (o *PutV1ModulesModuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ModulesModuleIDForbidden creates a PutV1ModulesModuleIDForbidden with default headers values
func NewPutV1ModulesModuleIDForbidden() *PutV1ModulesModuleIDForbidden {
	return &PutV1ModulesModuleIDForbidden{}
}

/*PutV1ModulesModuleIDForbidden handles this case with default header values.

Forbidden
*/
type PutV1ModulesModuleIDForbidden struct {
}

func (o *PutV1ModulesModuleIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/modules/{moduleId}/][%d] putV1ModulesModuleIdForbidden ", 403)
}

func (o *PutV1ModulesModuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ModulesModuleIDNotFound creates a PutV1ModulesModuleIDNotFound with default headers values
func NewPutV1ModulesModuleIDNotFound() *PutV1ModulesModuleIDNotFound {
	return &PutV1ModulesModuleIDNotFound{}
}

/*PutV1ModulesModuleIDNotFound handles this case with default header values.

Not found
*/
type PutV1ModulesModuleIDNotFound struct {
}

func (o *PutV1ModulesModuleIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/modules/{moduleId}/][%d] putV1ModulesModuleIdNotFound ", 404)
}

func (o *PutV1ModulesModuleIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ModulesModuleIDUnprocessableEntity creates a PutV1ModulesModuleIDUnprocessableEntity with default headers values
func NewPutV1ModulesModuleIDUnprocessableEntity() *PutV1ModulesModuleIDUnprocessableEntity {
	return &PutV1ModulesModuleIDUnprocessableEntity{}
}

/*PutV1ModulesModuleIDUnprocessableEntity handles this case with default header values.

Validation error
*/
type PutV1ModulesModuleIDUnprocessableEntity struct {
}

func (o *PutV1ModulesModuleIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /v1/modules/{moduleId}/][%d] putV1ModulesModuleIdUnprocessableEntity ", 422)
}

func (o *PutV1ModulesModuleIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
