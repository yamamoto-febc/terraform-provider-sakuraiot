package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// GetV1ModulesReader is a Reader for the GetV1Modules structure.
type GetV1ModulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ModulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetV1ModulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetV1ModulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetV1ModulesOK creates a GetV1ModulesOK with default headers values
func NewGetV1ModulesOK() *GetV1ModulesOK {
	return &GetV1ModulesOK{}
}

/*GetV1ModulesOK handles this case with default header values.

Modules
*/
type GetV1ModulesOK struct {
	Payload []*models.Module
}

func (o *GetV1ModulesOK) Error() string {
	return fmt.Sprintf("[GET /v1/modules/][%d] getV1ModulesOK  %+v", 200, o.Payload)
}

func (o *GetV1ModulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ModulesUnauthorized creates a GetV1ModulesUnauthorized with default headers values
func NewGetV1ModulesUnauthorized() *GetV1ModulesUnauthorized {
	return &GetV1ModulesUnauthorized{}
}

/*GetV1ModulesUnauthorized handles this case with default header values.

Unauthenticated
*/
type GetV1ModulesUnauthorized struct {
}

func (o *GetV1ModulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/modules/][%d] getV1ModulesUnauthorized ", 401)
}

func (o *GetV1ModulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
