package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// NewPutV1ModulesModuleIDParams creates a new PutV1ModulesModuleIDParams object
// with the default values initialized.
func NewPutV1ModulesModuleIDParams() *PutV1ModulesModuleIDParams {
	var ()
	return &PutV1ModulesModuleIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1ModulesModuleIDParamsWithTimeout creates a new PutV1ModulesModuleIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutV1ModulesModuleIDParamsWithTimeout(timeout time.Duration) *PutV1ModulesModuleIDParams {
	var ()
	return &PutV1ModulesModuleIDParams{

		timeout: timeout,
	}
}

// NewPutV1ModulesModuleIDParamsWithContext creates a new PutV1ModulesModuleIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutV1ModulesModuleIDParamsWithContext(ctx context.Context) *PutV1ModulesModuleIDParams {
	var ()
	return &PutV1ModulesModuleIDParams{

		Context: ctx,
	}
}

/*PutV1ModulesModuleIDParams contains all the parameters to send to the API endpoint
for the put v1 modules module ID operation typically these are written to a http.Request
*/
type PutV1ModulesModuleIDParams struct {

	/*Body*/
	Body *models.ModuleUpdate
	/*ModuleID
	  ID of module

	*/
	ModuleID string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) WithTimeout(timeout time.Duration) *PutV1ModulesModuleIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) WithContext(ctx context.Context) *PutV1ModulesModuleIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithBody adds the body to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) WithBody(body *models.ModuleUpdate) *PutV1ModulesModuleIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) SetBody(body *models.ModuleUpdate) {
	o.Body = body
}

// WithModuleID adds the moduleID to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) WithModuleID(moduleID string) *PutV1ModulesModuleIDParams {
	o.SetModuleID(moduleID)
	return o
}

// SetModuleID adds the moduleId to the put v1 modules module ID params
func (o *PutV1ModulesModuleIDParams) SetModuleID(moduleID string) {
	o.ModuleID = moduleID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1ModulesModuleIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Body == nil {
		o.Body = new(models.ModuleUpdate)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param moduleId
	if err := r.SetPathParam("moduleId", o.ModuleID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
