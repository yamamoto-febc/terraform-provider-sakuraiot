package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// GetV1ModulesModuleIDReader is a Reader for the GetV1ModulesModuleID structure.
type GetV1ModulesModuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ModulesModuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetV1ModulesModuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetV1ModulesModuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetV1ModulesModuleIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetV1ModulesModuleIDOK creates a GetV1ModulesModuleIDOK with default headers values
func NewGetV1ModulesModuleIDOK() *GetV1ModulesModuleIDOK {
	return &GetV1ModulesModuleIDOK{}
}

/*GetV1ModulesModuleIDOK handles this case with default header values.

Module
*/
type GetV1ModulesModuleIDOK struct {
	Payload *models.Module
}

func (o *GetV1ModulesModuleIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/modules/{moduleId}/][%d] getV1ModulesModuleIdOK  %+v", 200, o.Payload)
}

func (o *GetV1ModulesModuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Module)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ModulesModuleIDUnauthorized creates a GetV1ModulesModuleIDUnauthorized with default headers values
func NewGetV1ModulesModuleIDUnauthorized() *GetV1ModulesModuleIDUnauthorized {
	return &GetV1ModulesModuleIDUnauthorized{}
}

/*GetV1ModulesModuleIDUnauthorized handles this case with default header values.

Unauthenticated
*/
type GetV1ModulesModuleIDUnauthorized struct {
}

func (o *GetV1ModulesModuleIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/modules/{moduleId}/][%d] getV1ModulesModuleIdUnauthorized ", 401)
}

func (o *GetV1ModulesModuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetV1ModulesModuleIDNotFound creates a GetV1ModulesModuleIDNotFound with default headers values
func NewGetV1ModulesModuleIDNotFound() *GetV1ModulesModuleIDNotFound {
	return &GetV1ModulesModuleIDNotFound{}
}

/*GetV1ModulesModuleIDNotFound handles this case with default header values.

Not found
*/
type GetV1ModulesModuleIDNotFound struct {
}

func (o *GetV1ModulesModuleIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/modules/{moduleId}/][%d] getV1ModulesModuleIdNotFound ", 404)
}

func (o *GetV1ModulesModuleIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
