package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// NewPostV1ModulesParams creates a new PostV1ModulesParams object
// with the default values initialized.
func NewPostV1ModulesParams() *PostV1ModulesParams {
	var ()
	return &PostV1ModulesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1ModulesParamsWithTimeout creates a new PostV1ModulesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostV1ModulesParamsWithTimeout(timeout time.Duration) *PostV1ModulesParams {
	var ()
	return &PostV1ModulesParams{

		timeout: timeout,
	}
}

// NewPostV1ModulesParamsWithContext creates a new PostV1ModulesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostV1ModulesParamsWithContext(ctx context.Context) *PostV1ModulesParams {
	var ()
	return &PostV1ModulesParams{

		Context: ctx,
	}
}

/*PostV1ModulesParams contains all the parameters to send to the API endpoint
for the post v1 modules operation typically these are written to a http.Request
*/
type PostV1ModulesParams struct {

	/*RegisterInformation
	  Module information to register

	*/
	RegisterInformation *models.ModuleRegister

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the post v1 modules params
func (o *PostV1ModulesParams) WithTimeout(timeout time.Duration) *PostV1ModulesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1 modules params
func (o *PostV1ModulesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1 modules params
func (o *PostV1ModulesParams) WithContext(ctx context.Context) *PostV1ModulesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1 modules params
func (o *PostV1ModulesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithRegisterInformation adds the registerInformation to the post v1 modules params
func (o *PostV1ModulesParams) WithRegisterInformation(registerInformation *models.ModuleRegister) *PostV1ModulesParams {
	o.SetRegisterInformation(registerInformation)
	return o
}

// SetRegisterInformation adds the registerInformation to the post v1 modules params
func (o *PostV1ModulesParams) SetRegisterInformation(registerInformation *models.ModuleRegister) {
	o.RegisterInformation = registerInformation
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1ModulesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.RegisterInformation == nil {
		o.RegisterInformation = new(models.ModuleRegister)
	}

	if err := r.SetBodyParam(o.RegisterInformation); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
