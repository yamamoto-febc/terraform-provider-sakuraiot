package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// PostV1ModulesReader is a Reader for the PostV1Modules structure.
type PostV1ModulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1ModulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostV1ModulesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostV1ModulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostV1ModulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPostV1ModulesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostV1ModulesCreated creates a PostV1ModulesCreated with default headers values
func NewPostV1ModulesCreated() *PostV1ModulesCreated {
	return &PostV1ModulesCreated{}
}

/*PostV1ModulesCreated handles this case with default header values.

Registered module
*/
type PostV1ModulesCreated struct {
	Payload *models.Module
}

func (o *PostV1ModulesCreated) Error() string {
	return fmt.Sprintf("[POST /v1/modules/][%d] postV1ModulesCreated  %+v", 201, o.Payload)
}

func (o *PostV1ModulesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Module)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1ModulesUnauthorized creates a PostV1ModulesUnauthorized with default headers values
func NewPostV1ModulesUnauthorized() *PostV1ModulesUnauthorized {
	return &PostV1ModulesUnauthorized{}
}

/*PostV1ModulesUnauthorized handles this case with default header values.

Unauthenticated
*/
type PostV1ModulesUnauthorized struct {
}

func (o *PostV1ModulesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/modules/][%d] postV1ModulesUnauthorized ", 401)
}

func (o *PostV1ModulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostV1ModulesForbidden creates a PostV1ModulesForbidden with default headers values
func NewPostV1ModulesForbidden() *PostV1ModulesForbidden {
	return &PostV1ModulesForbidden{}
}

/*PostV1ModulesForbidden handles this case with default header values.

Forbidden
*/
type PostV1ModulesForbidden struct {
}

func (o *PostV1ModulesForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/modules/][%d] postV1ModulesForbidden ", 403)
}

func (o *PostV1ModulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostV1ModulesUnprocessableEntity creates a PostV1ModulesUnprocessableEntity with default headers values
func NewPostV1ModulesUnprocessableEntity() *PostV1ModulesUnprocessableEntity {
	return &PostV1ModulesUnprocessableEntity{}
}

/*PostV1ModulesUnprocessableEntity handles this case with default header values.

Validation error
*/
type PostV1ModulesUnprocessableEntity struct {
}

func (o *PostV1ModulesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /v1/modules/][%d] postV1ModulesUnprocessableEntity ", 422)
}

func (o *PostV1ModulesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
