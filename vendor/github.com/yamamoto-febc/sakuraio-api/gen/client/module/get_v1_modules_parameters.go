package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetV1ModulesParams creates a new GetV1ModulesParams object
// with the default values initialized.
func NewGetV1ModulesParams() *GetV1ModulesParams {
	var ()
	return &GetV1ModulesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1ModulesParamsWithTimeout creates a new GetV1ModulesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetV1ModulesParamsWithTimeout(timeout time.Duration) *GetV1ModulesParams {
	var ()
	return &GetV1ModulesParams{

		timeout: timeout,
	}
}

// NewGetV1ModulesParamsWithContext creates a new GetV1ModulesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetV1ModulesParamsWithContext(ctx context.Context) *GetV1ModulesParams {
	var ()
	return &GetV1ModulesParams{

		Context: ctx,
	}
}

/*GetV1ModulesParams contains all the parameters to send to the API endpoint
for the get v1 modules operation typically these are written to a http.Request
*/
type GetV1ModulesParams struct {

	/*Model
	  Model

	*/
	Model *string
	/*Project
	  ID of project

	*/
	Project *int64
	/*SerialNumber
	  Serial number

	*/
	SerialNumber *string
	/*Sort
	  Sort fields

	*/
	Sort *string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the get v1 modules params
func (o *GetV1ModulesParams) WithTimeout(timeout time.Duration) *GetV1ModulesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 modules params
func (o *GetV1ModulesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 modules params
func (o *GetV1ModulesParams) WithContext(ctx context.Context) *GetV1ModulesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 modules params
func (o *GetV1ModulesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithModel adds the model to the get v1 modules params
func (o *GetV1ModulesParams) WithModel(model *string) *GetV1ModulesParams {
	o.SetModel(model)
	return o
}

// SetModel adds the model to the get v1 modules params
func (o *GetV1ModulesParams) SetModel(model *string) {
	o.Model = model
}

// WithProject adds the project to the get v1 modules params
func (o *GetV1ModulesParams) WithProject(project *int64) *GetV1ModulesParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get v1 modules params
func (o *GetV1ModulesParams) SetProject(project *int64) {
	o.Project = project
}

// WithSerialNumber adds the serialNumber to the get v1 modules params
func (o *GetV1ModulesParams) WithSerialNumber(serialNumber *string) *GetV1ModulesParams {
	o.SetSerialNumber(serialNumber)
	return o
}

// SetSerialNumber adds the serialNumber to the get v1 modules params
func (o *GetV1ModulesParams) SetSerialNumber(serialNumber *string) {
	o.SerialNumber = serialNumber
}

// WithSort adds the sort to the get v1 modules params
func (o *GetV1ModulesParams) WithSort(sort *string) *GetV1ModulesParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get v1 modules params
func (o *GetV1ModulesParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1ModulesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Model != nil {

		// query param model
		var qrModel string
		if o.Model != nil {
			qrModel = *o.Model
		}
		qModel := qrModel
		if qModel != "" {
			if err := r.SetQueryParam("model", qModel); err != nil {
				return err
			}
		}

	}

	if o.Project != nil {

		// query param project
		var qrProject int64
		if o.Project != nil {
			qrProject = *o.Project
		}
		qProject := swag.FormatInt64(qrProject)
		if qProject != "" {
			if err := r.SetQueryParam("project", qProject); err != nil {
				return err
			}
		}

	}

	if o.SerialNumber != nil {

		// query param serial_number
		var qrSerialNumber string
		if o.SerialNumber != nil {
			qrSerialNumber = *o.SerialNumber
		}
		qSerialNumber := qrSerialNumber
		if qSerialNumber != "" {
			if err := r.SetQueryParam("serial_number", qSerialNumber); err != nil {
				return err
			}
		}

	}

	if o.Sort != nil {

		// query param sort
		var qrSort string
		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {
			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
