package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// NewPutV1ProjectsProjectIDParams creates a new PutV1ProjectsProjectIDParams object
// with the default values initialized.
func NewPutV1ProjectsProjectIDParams() *PutV1ProjectsProjectIDParams {
	var ()
	return &PutV1ProjectsProjectIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1ProjectsProjectIDParamsWithTimeout creates a new PutV1ProjectsProjectIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutV1ProjectsProjectIDParamsWithTimeout(timeout time.Duration) *PutV1ProjectsProjectIDParams {
	var ()
	return &PutV1ProjectsProjectIDParams{

		timeout: timeout,
	}
}

// NewPutV1ProjectsProjectIDParamsWithContext creates a new PutV1ProjectsProjectIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutV1ProjectsProjectIDParamsWithContext(ctx context.Context) *PutV1ProjectsProjectIDParams {
	var ()
	return &PutV1ProjectsProjectIDParams{

		Context: ctx,
	}
}

/*PutV1ProjectsProjectIDParams contains all the parameters to send to the API endpoint
for the put v1 projects project ID operation typically these are written to a http.Request
*/
type PutV1ProjectsProjectIDParams struct {

	/*Project
	  Project to create

	*/
	Project *models.ProjectUpdate
	/*ProjectID
	  ID of project

	*/
	ProjectID int64

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) WithTimeout(timeout time.Duration) *PutV1ProjectsProjectIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) WithContext(ctx context.Context) *PutV1ProjectsProjectIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithProject adds the project to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) WithProject(project *models.ProjectUpdate) *PutV1ProjectsProjectIDParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) SetProject(project *models.ProjectUpdate) {
	o.Project = project
}

// WithProjectID adds the projectID to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) WithProjectID(projectID int64) *PutV1ProjectsProjectIDParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the put v1 projects project ID params
func (o *PutV1ProjectsProjectIDParams) SetProjectID(projectID int64) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1ProjectsProjectIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Project == nil {
		o.Project = new(models.ProjectUpdate)
	}

	if err := r.SetBodyParam(o.Project); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", swag.FormatInt64(o.ProjectID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
