package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// PutV1ProjectsProjectIDReader is a Reader for the PutV1ProjectsProjectID structure.
type PutV1ProjectsProjectIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutV1ProjectsProjectIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutV1ProjectsProjectIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutV1ProjectsProjectIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutV1ProjectsProjectIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutV1ProjectsProjectIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPutV1ProjectsProjectIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutV1ProjectsProjectIDOK creates a PutV1ProjectsProjectIDOK with default headers values
func NewPutV1ProjectsProjectIDOK() *PutV1ProjectsProjectIDOK {
	return &PutV1ProjectsProjectIDOK{}
}

/*PutV1ProjectsProjectIDOK handles this case with default header values.

Updated project
*/
type PutV1ProjectsProjectIDOK struct {
	Payload *models.Project
}

func (o *PutV1ProjectsProjectIDOK) Error() string {
	return fmt.Sprintf("[PUT /v1/projects/{projectId}/][%d] putV1ProjectsProjectIdOK  %+v", 200, o.Payload)
}

func (o *PutV1ProjectsProjectIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutV1ProjectsProjectIDUnauthorized creates a PutV1ProjectsProjectIDUnauthorized with default headers values
func NewPutV1ProjectsProjectIDUnauthorized() *PutV1ProjectsProjectIDUnauthorized {
	return &PutV1ProjectsProjectIDUnauthorized{}
}

/*PutV1ProjectsProjectIDUnauthorized handles this case with default header values.

Unauthenticated
*/
type PutV1ProjectsProjectIDUnauthorized struct {
}

func (o *PutV1ProjectsProjectIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/projects/{projectId}/][%d] putV1ProjectsProjectIdUnauthorized ", 401)
}

func (o *PutV1ProjectsProjectIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ProjectsProjectIDForbidden creates a PutV1ProjectsProjectIDForbidden with default headers values
func NewPutV1ProjectsProjectIDForbidden() *PutV1ProjectsProjectIDForbidden {
	return &PutV1ProjectsProjectIDForbidden{}
}

/*PutV1ProjectsProjectIDForbidden handles this case with default header values.

Forbidden
*/
type PutV1ProjectsProjectIDForbidden struct {
}

func (o *PutV1ProjectsProjectIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/projects/{projectId}/][%d] putV1ProjectsProjectIdForbidden ", 403)
}

func (o *PutV1ProjectsProjectIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ProjectsProjectIDNotFound creates a PutV1ProjectsProjectIDNotFound with default headers values
func NewPutV1ProjectsProjectIDNotFound() *PutV1ProjectsProjectIDNotFound {
	return &PutV1ProjectsProjectIDNotFound{}
}

/*PutV1ProjectsProjectIDNotFound handles this case with default header values.

Not found
*/
type PutV1ProjectsProjectIDNotFound struct {
}

func (o *PutV1ProjectsProjectIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/projects/{projectId}/][%d] putV1ProjectsProjectIdNotFound ", 404)
}

func (o *PutV1ProjectsProjectIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ProjectsProjectIDUnprocessableEntity creates a PutV1ProjectsProjectIDUnprocessableEntity with default headers values
func NewPutV1ProjectsProjectIDUnprocessableEntity() *PutV1ProjectsProjectIDUnprocessableEntity {
	return &PutV1ProjectsProjectIDUnprocessableEntity{}
}

/*PutV1ProjectsProjectIDUnprocessableEntity handles this case with default header values.

Validation error
*/
type PutV1ProjectsProjectIDUnprocessableEntity struct {
}

func (o *PutV1ProjectsProjectIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /v1/projects/{projectId}/][%d] putV1ProjectsProjectIdUnprocessableEntity ", 422)
}

func (o *PutV1ProjectsProjectIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
