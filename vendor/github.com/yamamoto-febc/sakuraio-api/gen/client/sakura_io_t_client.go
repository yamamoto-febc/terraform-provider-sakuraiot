package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/client/auth"
	"github.com/yamamoto-febc/sakuraio-api/gen/client/module"
	"github.com/yamamoto-febc/sakuraio-api/gen/client/project"
	"github.com/yamamoto-febc/sakuraio-api/gen/client/service"
)

// Default sakura io t HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new sakura io t HTTP client.
func NewHTTPClient(formats strfmt.Registry) *SakuraIoT {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("api.sakura.io", "/", []string{"https"})
	return New(transport, formats)
}

// New creates a new sakura io t client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *SakuraIoT {
	cli := new(SakuraIoT)
	cli.Transport = transport

	cli.Auth = auth.New(transport, formats)

	cli.Module = module.New(transport, formats)

	cli.Project = project.New(transport, formats)

	cli.Service = service.New(transport, formats)

	return cli
}

// SakuraIoT is a client for sakura io t
type SakuraIoT struct {
	Auth *auth.Client

	Module *module.Client

	Project *project.Client

	Service *service.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *SakuraIoT) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Auth.SetTransport(transport)

	c.Module.SetTransport(transport)

	c.Project.SetTransport(transport)

	c.Service.SetTransport(transport)

}
