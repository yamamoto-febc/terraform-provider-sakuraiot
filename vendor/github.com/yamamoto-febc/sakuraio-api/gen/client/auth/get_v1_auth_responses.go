package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// GetV1AuthReader is a Reader for the GetV1Auth structure.
type GetV1AuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1AuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetV1AuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetV1AuthUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetV1AuthOK creates a GetV1AuthOK with default headers values
func NewGetV1AuthOK() *GetV1AuthOK {
	return &GetV1AuthOK{}
}

/*GetV1AuthOK handles this case with default header values.

Authenticated
*/
type GetV1AuthOK struct {
	Payload *models.Auth
}

func (o *GetV1AuthOK) Error() string {
	return fmt.Sprintf("[GET /v1/auth/][%d] getV1AuthOK  %+v", 200, o.Payload)
}

func (o *GetV1AuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Auth)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AuthUnauthorized creates a GetV1AuthUnauthorized with default headers values
func NewGetV1AuthUnauthorized() *GetV1AuthUnauthorized {
	return &GetV1AuthUnauthorized{}
}

/*GetV1AuthUnauthorized handles this case with default header values.

Unauthenticated
*/
type GetV1AuthUnauthorized struct {
}

func (o *GetV1AuthUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/auth/][%d] getV1AuthUnauthorized ", 401)
}

func (o *GetV1AuthUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
