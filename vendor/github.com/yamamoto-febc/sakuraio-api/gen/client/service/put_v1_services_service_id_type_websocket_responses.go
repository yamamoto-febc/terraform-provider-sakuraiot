package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// PutV1ServicesServiceIDTypeWebsocketReader is a Reader for the PutV1ServicesServiceIDTypeWebsocket structure.
type PutV1ServicesServiceIDTypeWebsocketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutV1ServicesServiceIDTypeWebsocketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutV1ServicesServiceIDTypeWebsocketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutV1ServicesServiceIDTypeWebsocketUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutV1ServicesServiceIDTypeWebsocketForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutV1ServicesServiceIDTypeWebsocketNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPutV1ServicesServiceIDTypeWebsocketUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutV1ServicesServiceIDTypeWebsocketOK creates a PutV1ServicesServiceIDTypeWebsocketOK with default headers values
func NewPutV1ServicesServiceIDTypeWebsocketOK() *PutV1ServicesServiceIDTypeWebsocketOK {
	return &PutV1ServicesServiceIDTypeWebsocketOK{}
}

/*PutV1ServicesServiceIDTypeWebsocketOK handles this case with default header values.

Updated servic
*/
type PutV1ServicesServiceIDTypeWebsocketOK struct {
	Payload *models.WebSocketService
}

func (o *PutV1ServicesServiceIDTypeWebsocketOK) Error() string {
	return fmt.Sprintf("[PUT /v1/services/{serviceId}/?type=websocket][%d] putV1ServicesServiceIdTypeWebsocketOK  %+v", 200, o.Payload)
}

func (o *PutV1ServicesServiceIDTypeWebsocketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebSocketService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutV1ServicesServiceIDTypeWebsocketUnauthorized creates a PutV1ServicesServiceIDTypeWebsocketUnauthorized with default headers values
func NewPutV1ServicesServiceIDTypeWebsocketUnauthorized() *PutV1ServicesServiceIDTypeWebsocketUnauthorized {
	return &PutV1ServicesServiceIDTypeWebsocketUnauthorized{}
}

/*PutV1ServicesServiceIDTypeWebsocketUnauthorized handles this case with default header values.

Unauthenticated
*/
type PutV1ServicesServiceIDTypeWebsocketUnauthorized struct {
}

func (o *PutV1ServicesServiceIDTypeWebsocketUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/services/{serviceId}/?type=websocket][%d] putV1ServicesServiceIdTypeWebsocketUnauthorized ", 401)
}

func (o *PutV1ServicesServiceIDTypeWebsocketUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ServicesServiceIDTypeWebsocketForbidden creates a PutV1ServicesServiceIDTypeWebsocketForbidden with default headers values
func NewPutV1ServicesServiceIDTypeWebsocketForbidden() *PutV1ServicesServiceIDTypeWebsocketForbidden {
	return &PutV1ServicesServiceIDTypeWebsocketForbidden{}
}

/*PutV1ServicesServiceIDTypeWebsocketForbidden handles this case with default header values.

Forbidden
*/
type PutV1ServicesServiceIDTypeWebsocketForbidden struct {
}

func (o *PutV1ServicesServiceIDTypeWebsocketForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/services/{serviceId}/?type=websocket][%d] putV1ServicesServiceIdTypeWebsocketForbidden ", 403)
}

func (o *PutV1ServicesServiceIDTypeWebsocketForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ServicesServiceIDTypeWebsocketNotFound creates a PutV1ServicesServiceIDTypeWebsocketNotFound with default headers values
func NewPutV1ServicesServiceIDTypeWebsocketNotFound() *PutV1ServicesServiceIDTypeWebsocketNotFound {
	return &PutV1ServicesServiceIDTypeWebsocketNotFound{}
}

/*PutV1ServicesServiceIDTypeWebsocketNotFound handles this case with default header values.

Not found
*/
type PutV1ServicesServiceIDTypeWebsocketNotFound struct {
}

func (o *PutV1ServicesServiceIDTypeWebsocketNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/services/{serviceId}/?type=websocket][%d] putV1ServicesServiceIdTypeWebsocketNotFound ", 404)
}

func (o *PutV1ServicesServiceIDTypeWebsocketNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutV1ServicesServiceIDTypeWebsocketUnprocessableEntity creates a PutV1ServicesServiceIDTypeWebsocketUnprocessableEntity with default headers values
func NewPutV1ServicesServiceIDTypeWebsocketUnprocessableEntity() *PutV1ServicesServiceIDTypeWebsocketUnprocessableEntity {
	return &PutV1ServicesServiceIDTypeWebsocketUnprocessableEntity{}
}

/*PutV1ServicesServiceIDTypeWebsocketUnprocessableEntity handles this case with default header values.

Validation error
*/
type PutV1ServicesServiceIDTypeWebsocketUnprocessableEntity struct {
}

func (o *PutV1ServicesServiceIDTypeWebsocketUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /v1/services/{serviceId}/?type=websocket][%d] putV1ServicesServiceIdTypeWebsocketUnprocessableEntity ", 422)
}

func (o *PutV1ServicesServiceIDTypeWebsocketUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
