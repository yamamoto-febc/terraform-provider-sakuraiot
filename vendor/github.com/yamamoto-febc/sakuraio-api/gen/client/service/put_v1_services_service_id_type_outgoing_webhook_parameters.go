package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// NewPutV1ServicesServiceIDTypeOutgoingWebhookParams creates a new PutV1ServicesServiceIDTypeOutgoingWebhookParams object
// with the default values initialized.
func NewPutV1ServicesServiceIDTypeOutgoingWebhookParams() *PutV1ServicesServiceIDTypeOutgoingWebhookParams {
	var ()
	return &PutV1ServicesServiceIDTypeOutgoingWebhookParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1ServicesServiceIDTypeOutgoingWebhookParamsWithTimeout creates a new PutV1ServicesServiceIDTypeOutgoingWebhookParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutV1ServicesServiceIDTypeOutgoingWebhookParamsWithTimeout(timeout time.Duration) *PutV1ServicesServiceIDTypeOutgoingWebhookParams {
	var ()
	return &PutV1ServicesServiceIDTypeOutgoingWebhookParams{

		timeout: timeout,
	}
}

// NewPutV1ServicesServiceIDTypeOutgoingWebhookParamsWithContext creates a new PutV1ServicesServiceIDTypeOutgoingWebhookParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutV1ServicesServiceIDTypeOutgoingWebhookParamsWithContext(ctx context.Context) *PutV1ServicesServiceIDTypeOutgoingWebhookParams {
	var ()
	return &PutV1ServicesServiceIDTypeOutgoingWebhookParams{

		Context: ctx,
	}
}

/*PutV1ServicesServiceIDTypeOutgoingWebhookParams contains all the parameters to send to the API endpoint
for the put v1 services service ID type outgoing webhook operation typically these are written to a http.Request
*/
type PutV1ServicesServiceIDTypeOutgoingWebhookParams struct {

	/*OutgoingWebhookService
	  OutgoingWebhookService

	*/
	OutgoingWebhookService *models.OutgoingWebhookServiceUpdate
	/*ServiceID
	  ID of service

	*/
	ServiceID int64

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) WithTimeout(timeout time.Duration) *PutV1ServicesServiceIDTypeOutgoingWebhookParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) WithContext(ctx context.Context) *PutV1ServicesServiceIDTypeOutgoingWebhookParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithOutgoingWebhookService adds the outgoingWebhookService to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) WithOutgoingWebhookService(outgoingWebhookService *models.OutgoingWebhookServiceUpdate) *PutV1ServicesServiceIDTypeOutgoingWebhookParams {
	o.SetOutgoingWebhookService(outgoingWebhookService)
	return o
}

// SetOutgoingWebhookService adds the outgoingWebhookService to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) SetOutgoingWebhookService(outgoingWebhookService *models.OutgoingWebhookServiceUpdate) {
	o.OutgoingWebhookService = outgoingWebhookService
}

// WithServiceID adds the serviceID to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) WithServiceID(serviceID int64) *PutV1ServicesServiceIDTypeOutgoingWebhookParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the put v1 services service ID type outgoing webhook params
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) SetServiceID(serviceID int64) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1ServicesServiceIDTypeOutgoingWebhookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.OutgoingWebhookService == nil {
		o.OutgoingWebhookService = new(models.OutgoingWebhookServiceUpdate)
	}

	if err := r.SetBodyParam(o.OutgoingWebhookService); err != nil {
		return err
	}

	// path param serviceId
	if err := r.SetPathParam("serviceId", swag.FormatInt64(o.ServiceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
