package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/yamamoto-febc/sakuraio-api/gen/models"
)

// GetV1ServicesServiceIDTypeOutgoingWebhookReader is a Reader for the GetV1ServicesServiceIDTypeOutgoingWebhook structure.
type GetV1ServicesServiceIDTypeOutgoingWebhookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ServicesServiceIDTypeOutgoingWebhookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetV1ServicesServiceIDTypeOutgoingWebhookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetV1ServicesServiceIDTypeOutgoingWebhookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetV1ServicesServiceIDTypeOutgoingWebhookOK creates a GetV1ServicesServiceIDTypeOutgoingWebhookOK with default headers values
func NewGetV1ServicesServiceIDTypeOutgoingWebhookOK() *GetV1ServicesServiceIDTypeOutgoingWebhookOK {
	return &GetV1ServicesServiceIDTypeOutgoingWebhookOK{}
}

/*GetV1ServicesServiceIDTypeOutgoingWebhookOK handles this case with default header values.

Service
*/
type GetV1ServicesServiceIDTypeOutgoingWebhookOK struct {
	Payload *models.OutgoingWebhookService
}

func (o *GetV1ServicesServiceIDTypeOutgoingWebhookOK) Error() string {
	return fmt.Sprintf("[GET /v1/services/{serviceId}/?type=outgoing-webhook][%d] getV1ServicesServiceIdTypeOutgoingWebhookOK  %+v", 200, o.Payload)
}

func (o *GetV1ServicesServiceIDTypeOutgoingWebhookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OutgoingWebhookService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized creates a GetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized with default headers values
func NewGetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized() *GetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized {
	return &GetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized{}
}

/*GetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized handles this case with default header values.

Unauthenticated
*/
type GetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized struct {
}

func (o *GetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/services/{serviceId}/?type=outgoing-webhook][%d] getV1ServicesServiceIdTypeOutgoingWebhookUnauthorized ", 401)
}

func (o *GetV1ServicesServiceIDTypeOutgoingWebhookUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetV1ServicesServiceIDTypeOutgoingWebhookNotFound creates a GetV1ServicesServiceIDTypeOutgoingWebhookNotFound with default headers values
func NewGetV1ServicesServiceIDTypeOutgoingWebhookNotFound() *GetV1ServicesServiceIDTypeOutgoingWebhookNotFound {
	return &GetV1ServicesServiceIDTypeOutgoingWebhookNotFound{}
}

/*GetV1ServicesServiceIDTypeOutgoingWebhookNotFound handles this case with default header values.

Not found
*/
type GetV1ServicesServiceIDTypeOutgoingWebhookNotFound struct {
}

func (o *GetV1ServicesServiceIDTypeOutgoingWebhookNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/services/{serviceId}/?type=outgoing-webhook][%d] getV1ServicesServiceIdTypeOutgoingWebhookNotFound ", 404)
}

func (o *GetV1ServicesServiceIDTypeOutgoingWebhookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
