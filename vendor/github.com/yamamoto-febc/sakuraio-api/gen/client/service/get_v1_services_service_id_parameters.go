package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetV1ServicesServiceIDParams creates a new GetV1ServicesServiceIDParams object
// with the default values initialized.
func NewGetV1ServicesServiceIDParams() *GetV1ServicesServiceIDParams {
	var ()
	return &GetV1ServicesServiceIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1ServicesServiceIDParamsWithTimeout creates a new GetV1ServicesServiceIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetV1ServicesServiceIDParamsWithTimeout(timeout time.Duration) *GetV1ServicesServiceIDParams {
	var ()
	return &GetV1ServicesServiceIDParams{

		timeout: timeout,
	}
}

// NewGetV1ServicesServiceIDParamsWithContext creates a new GetV1ServicesServiceIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetV1ServicesServiceIDParamsWithContext(ctx context.Context) *GetV1ServicesServiceIDParams {
	var ()
	return &GetV1ServicesServiceIDParams{

		Context: ctx,
	}
}

/*GetV1ServicesServiceIDParams contains all the parameters to send to the API endpoint
for the get v1 services service ID operation typically these are written to a http.Request
*/
type GetV1ServicesServiceIDParams struct {

	/*ServiceID
	  ID of service

	*/
	ServiceID int64

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the get v1 services service ID params
func (o *GetV1ServicesServiceIDParams) WithTimeout(timeout time.Duration) *GetV1ServicesServiceIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 services service ID params
func (o *GetV1ServicesServiceIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 services service ID params
func (o *GetV1ServicesServiceIDParams) WithContext(ctx context.Context) *GetV1ServicesServiceIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 services service ID params
func (o *GetV1ServicesServiceIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithServiceID adds the serviceID to the get v1 services service ID params
func (o *GetV1ServicesServiceIDParams) WithServiceID(serviceID int64) *GetV1ServicesServiceIDParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the get v1 services service ID params
func (o *GetV1ServicesServiceIDParams) SetServiceID(serviceID int64) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1ServicesServiceIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param serviceId
	if err := r.SetPathParam("serviceId", swag.FormatInt64(o.ServiceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
